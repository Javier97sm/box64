#() vFE
#() vFv
#() vFi
#() vFu
#() vFl
#() vFp
#() vFS
#() iFE
#() iFv
#() iFi
#() iFI
#() iFu
#() iFU
#() iFf
#() iFd
#() iFD
#() iFl
#() iFL
#() iFp
#() iFO
#() iFS
#() IFv
#() IFI
#() IFf
#() IFd
#() IFp
#() WFW
#() uFv
#() uFi
#() uFu
#() uFL
#() uFp
#() fFf
#() fFp
#() dFv
#() dFd
#() dFp
#() lFE
#() lFv
#() lFl
#() lFp
#() LFv
#() LFL
#() LFp
#() pFE
#() pFv
#() pFi
#() pFu
#() pFl
#() pFL
#() pFp
#() xFx
#() XFX
#() vWp
#() iWp
#() uWp
#() fWp
#() vFEi
#() vFEp
#() vFip
#() vFWp
#() vFup
#() vFLp
#() vFpi
#() vFpl
#() vFpL
#() vFpp
#() vFpS
#() vFSi
#() iFEi
#() iFEf
#() iFEd
#() iFEL
#() iFEp
#() iFii
#() iFiI
#() iFiu
#() iFil
#() iFiL
#() iFip
#() iFiS
#() iFui
#() iFuu
#() iFuL
#() iFup
#() iFlp
#() iFLL
#() iFLp
#() iFpw
#() iFpi
#() iFpI
#() iFpW
#() iFpu
#() iFpU
#() iFpl
#() iFpL
#() iFpp
#() iFpO
#() iFSi
#() IFEi
#() IFEf
#() IFEd
#() IFII
#() uFii
#() uFip
#() uFuu
#() uFup
#() uFpp
#() fFEf
#() fFif
#() fFfi
#() fFff
#() fFfD
#() fFfp
#() fFpp
#() dFEd
#() dFid
#() dFdi
#() dFdd
#() dFdD
#() dFdp
#() dFll
#() dFpp
#() DFDi
#() DFDD
#() DFDp
#() DFpp
#() lFEi
#() lFii
#() lFpi
#() LFEL
#() LFii
#() LFuu
#() LFpL
#() LFpp
#() pFEp
#() pFip
#() pFup
#() pFUU
#() pFLL
#() pFpi
#() pFpu
#() pFpL
#() pFpp
#() pFSi
#() HFII
#() HFll
#() xFxx
#() XFXX
#() iWpi
#() iWpu
#() iWpf
#() iWpp
#() uWpu
#() pWpu
#() vFEpi
#() vFEpu
#() vFEpp
#() vFEpV
#() vFfpp
#() vFdpp
#() vFpii
#() vFpip
#() vFpLi
#() vFpLL
#() vFpLp
#() vFppi
#() vFppl
#() vFppL
#() vFppp
#() iFEip
#() iFEup
#() iFEpi
#() iFEpL
#() iFEpp
#() iFEpV
#() iFEpA
#() iFESp
#() iFiii
#() iFiiI
#() iFiil
#() iFiip
#() iFiiO
#() iFiuu
#() iFill
#() iFiLi
#() iFiLp
#() iFiLN
#() iFipi
#() iFipu
#() iFipL
#() iFipp
#() iFipO
#() iFuui
#() iFuuu
#() iFuLL
#() iFuLp
#() iFupp
#() iFLip
#() iFLpp
#() iFpii
#() iFpiu
#() iFpip
#() iFpIi
#() iFpui
#() iFpuu
#() iFpuL
#() iFpli
#() iFpLi
#() iFpLu
#() iFpLL
#() iFpLp
#() iFppi
#() iFppL
#() iFppp
#() iFpOu
#() iFpOM
#() iFSpL
#() IFiIi
#() IFppi
#() IFSIi
#() uFupp
#() uFppi
#() UFppi
#() fFfff
#() fFffp
#() fFppi
#() fFppL
#() fFppp
#() dFddd
#() dFddp
#() dFppi
#() dFppp
#() DFppi
#() DFppp
#() lFili
#() lFilL
#() lFipi
#() lFipL
#() lFpLu
#() lFppi
#() lFppL
#() lFppp
#() lFSpl
#() LFipL
#() LFpup
#() LFpLp
#() LFppi
#() LFppL
#() LFSpL
#() pFEip
#() pFEpi
#() pFEpp
#() pFipi
#() pFipL
#() pFipp
#() pFupL
#() pFdip
#() pFDip
#() pFLLp
#() pFpiL
#() pFpip
#() pFpui
#() pFpuL
#() pFpLL
#() pFpLp
#() pFppi
#() pFppU
#() pFppL
#() pFppp
#() pFpOM
#() pFSpl
#() vWpup
#() iWEpp
#() iWpiu
#() iWpip
#() iWpui
#() iWpuu
#() iWpup
#() iWppu
#() iWppp
#() uWpui
#() uWpup
#() vFEipV
#() vFEipA
#() vFEpii
#() vFEpup
#() vFEppp
#() vFiipV
#() vFipup
#() vFppup
#() iFEiip
#() iFEiiN
#() iFEipp
#() iFEipV
#() iFEipA
#() iFEupp
#() iFEpip
#() iFEpLi
#() iFEpLp
#() iFEppi
#() iFEppL
#() iFEppp
#() iFEppV
#() iFEppA
#() iFEpOu
#() iFiiip
#() iFiiiN
#() iFiill
#() iFiipp
#() iFiupp
#() iFilli
#() iFillu
#() iFipii
#() iFipip
#() iFipui
#() iFipuL
#() iFipLi
#() iFipLu
#() iFipLp
#() iFippi
#() iFippL
#() iFipON
#() iFuipp
#() iFuupi
#() iFupLp
#() iFpiip
#() iFpipi
#() iFpipu
#() iFpipp
#() iFpuiL
#() iFpupp
#() iFpLii
#() iFpLLu
#() iFpLpf
#() iFpLpd
#() iFpLpD
#() iFpLpL
#() iFpLpp
#() iFppii
#() iFppiL
#() iFppLp
#() iFpppi
#() iFpppL
#() iFpppp
#() IFipUI
#() IFipUp
#() IFppii
#() IFppip
#() IFSIii
#() UFppii
#() UFppip
#() lFEipV
#() lFEppL
#() lFiiLu
#() lFiipL
#() lFipil
#() lFipLi
#() lFipLI
#() lFipLu
#() lFipLl
#() lFipLL
#() lFipLp
#() lFippL
#() lFppii
#() lFppip
#() lFpppL
#() LFEppL
#() LFipLL
#() LFippL
#() LFpupL
#() LFpLLp
#() LFpLpp
#() LFppii
#() LFppip
#() LFppLL
#() LFppLp
#() pFEpip
#() pFEppi
#() pFEppp
#() pFEppV
#() pFippu
#() pFdipp
#() pFDipp
#() pFpiii
#() pFpiip
#() pFpiLL
#() pFpuii
#() pFpuLL
#() pFpLip
#() pFpLpL
#() pFppiL
#() pFppip
#() pFppLL
#() pFpppi
#() pFpppL
#() pFSppi
#() vWpiiu
#() vWpuup
#() iWEpip
#() iWEpup
#() iWEppu
#() iWEppp
#() iWpiii
#() iWpiuu
#() iWpuiu
#() iWpuip
#() iWpuup
#() iWpupu
#() iWpupp
#() iWppuu
#() iWpppu
#() iWpppp
#() vFEiipV
#() vFEiipA
#() vFEpLLp
#() iFEiipV
#() iFEiipA
#() iFEipip
#() iFEippi
#() iFEippL
#() iFEpipp
#() iFEpipV
#() iFEpipA
#() iFEpLpV
#() iFEpLpA
#() iFEppii
#() iFEppip
#() iFEppiV
#() iFEpppi
#() iFEpppp
#() iFiiipu
#() iFiiipp
#() iFiuLip
#() iFipiup
#() iFipipi
#() iFipipu
#() iFipuip
#() iFipuui
#() iFipLup
#() iFippLi
#() iFippLp
#() iFipppi
#() iFipppp
#() iFuppLp
#() iFpiipi
#() iFpiipp
#() iFpipiu
#() iFpippW
#() iFpuppL
#() iFpLiLi
#() iFpLLpp
#() iFppipp
#() iFppLpi
#() iFppLpp
#() iFpppLi
#() iFpppLp
#() iFppppi
#() iFppppL
#() iFppppp
#() lFEuipp
#() lFipili
#() lFipLli
#() lFipLlL
#() lFipLLi
#() lFipLpp
#() lFppllp
#() LFpLLLp
#() LFpLppL
#() LFpLppp
#() LFppLLp
#() LFppLpL
#() LFppppp
#() pFipipL
#() pFppipi
#() pFpppLi
#() iWEpiup
#() iWEpipp
#() iWpiiii
#() iWpiupu
#() iWpuiii
#() iWpuiup
#() iWpuupu
#() iWpuupp
#() iWpupuu
#() iWpupup
#() iWpuppu
#() iWpuppp
#() iWpppuu
#() iWpppup
#() iWppppp
#() vFEpLLpp
#() iFEiippi
#() iFEiLLLL
#() iFEpilpV
#() iFEpuppp
#() iFipppLp
#() iFippppp
#() iFdipppL
#() iFDipppL
#() iFlpippp
#() iFpipppp
#() iFpWpppp
#() iFpuiCpp
#() iFpuippp
#() iFppiipi
#() iFpppLpp
#() iFppppLp
#() lFipipLu
#() lFipLipu
#() lFipLipp
#() lFipLpLL
#() lFpplllp
#() LFppLLpL
#() LFSpLiip
#() pFEpLLiN
#() pFEppLLp
#() pFEpppLp
#() pFSpiiii
#() iWEpuuip
#() iWEppppp
#() iWpiiiip
#() iWpiiuii
#() iWpiuppu
#() iWpuiiii
#() iWpppppi
#() iWpppppu
#() iFEpLiLpp
#() iFEpLiLpV
#() iFEpppppp
#() iFpippLpp
#() iFpippppW
#() iFpWppppW
#() iFpuiCuCp
#() iFpupupui
#() pFEpLiiil
#() iWpiiuuuu
#() iWpuiiiip
#() iWpuiiuii
#() iWpuipupp
#() iWpuuuppu
#() iWpupuufu
#() iWpppuppp
#() iFEpippppp
#() iFEppipppp
#() iFpuippLpp
#() iWEpuuiipp
#() iWEpuuuipp
#() iWpuipuppp
#() iFipiipippi
#() iWEpuuiippu
#() iWEpuuuiipp
#() iWpiuuupipu
#() iWpuiuuipip
#() iWppppupiii
#() lFpLppdddddd
#() iWEpuipupppp
#() iWEpuuiiuipp
#() iWEpuuuuiipp
#() iWEpuipuppppp
#() iWEpuuiiuippu
#() iWEpuuuuuiipp
#defined(HAVE_LD80BITS) DFD
#defined(HAVE_LD80BITS) DFY
#defined(HAVE_LD80BITS) lFD
#defined(HAVE_LD80BITS) YFY
#defined(HAVE_LD80BITS) IFED
#defined(HAVE_LD80BITS) DFiD
#defined(HAVE_LD80BITS) lFDD
#defined(HAVE_LD80BITS) YFYY
#defined(HAVE_LD80BITS) vFDpp
#defined(HAVE_LD80BITS) DFDDD
#!defined(HAVE_LD80BITS) KFK
#!defined(HAVE_LD80BITS) KFy
#!defined(HAVE_LD80BITS) lFK
#!defined(HAVE_LD80BITS) yFy
#!defined(HAVE_LD80BITS) IFEK
#!defined(HAVE_LD80BITS) KFiK
#!defined(HAVE_LD80BITS) KFKK
#!defined(HAVE_LD80BITS) KFKp
#!defined(HAVE_LD80BITS) lFKK
#!defined(HAVE_LD80BITS) yFyy
#!defined(HAVE_LD80BITS) vFKpp
#!defined(HAVE_LD80BITS) KFKKK
#defined(NOALIGN) iFppu
#defined(NOALIGN) iFipiip
#!defined(NOALIGN) iFELp
#!defined(NOALIGN) iFEppu
#!defined(NOALIGN) iFEiiip
#!defined(NOALIGN) iFEipii
#!defined(NOALIGN) iFEipiip
#defined(ANDROID) vFEpppp
#defined(STATICBUILD) pFLp
#defined(STATICBUILD) pFpLLp
#!defined(STATICBUILD) vFLL
#!defined(STATICBUILD) iFlip
#!defined(STATICBUILD) iFLLi
#!defined(STATICBUILD) iFpup
#!defined(STATICBUILD) iFLLiW
#!defined(STATICBUILD) iFEipup
#!defined(STATICBUILD) iFEiipup
#!defined(STATICBUILD) iFpipppL
#() vFEv -> vFE
#() iFEv -> iFE
#() lFEv -> lFE
#() pFEv -> pFE
#() iFEvpp -> iFEpp
#() pFEppv -> pFEpp
#() iFEpvpp -> iFEppp
#() iFEpvvppp -> iFEpppp
#() iFEpuvvppp -> iFEpuppp
wrappedd3dadapter9:
- iWpp:
  - EndStateBlock
  - GetDepthStencilSurface
  - GetDirect3D
- iWpip:
  - CreateQuery
  - CreateStateBlock
- iWpup:
  - GetRenderTarget
  - GetSurfaceLevel
  - GetSwapChain
  - GetVolumeLevel
- iWppu:
  - CheckResourceResidency
- iWppp:
  - CreateAdditionalSwapChain
  - CreatePixelShader
  - CreateVertexDeclaration
  - CreateVertexShader
- iWpiup:
  - GetCubeMapSurface
- iWpipp:
  - CreateAuthenticatedChannel
- iWpuuip:
  - GetBackBuffer
- iWppppp:
  - CreateCryptoSession
- iWpuuiipp:
  - CreateIndexBuffer
  - CreateOffscreenPlainSurface
- iWpuuuipp:
  - CreateVertexBuffer
- iWpuuiippu:
  - CreateOffscreenPlainSurfaceEx
- iWpuuuiipp:
  - CreateCubeTexture
- iWpuipupppp:
  - CreateDevice
- iWpuuiiuipp:
  - CreateDepthStencilSurface
  - CreateRenderTarget
- iWpuuuuiipp:
  - CreateTexture
- iWpuipuppppp:
  - CreateDeviceEx
- iWpuuiiuippu:
  - CreateDepthStencilSurfaceEx
  - CreateRenderTargetEx
- iWpuuuuuiipp:
  - CreateVolumeTexture
wrappedldlinux:
- pFp:
  - __tls_get_addr
wrappedlibbsd:
wrappedlibc:
- vFv:
  - _Jv_RegisterClasses
  - __cxa_pure_virtual
  - __stack_chk_fail
- vFi:
  - exit
- vFp:
  - _ITM_deregisterTMCloneTable
  - __cxa_finalize
- iFv:
  - fork
  - vfork
- iFi:
  - iopl
- iFp:
  - _setjmp
  - atexit
  - getcontext
  - register_printf_type
  - setcontext
  - setjmp
  - stime
  - uname
- IFi:
  - sysconf
- lFv:
  - syscall
- lFi:
  - __sysconf
- LFL:
  - getauxval
- pFp:
  - __deregister_frame_info
  - mallinfo
- vFpi:
  - __longjmp_chk
  - _longjmp
  - _obstack_newchunk
  - longjmp
  - siglongjmp
- vFpu:
  - _ITM_registerTMCloneTable
- vFpp:
  - __register_frame_info
  - _obstack_free
  - obstack_free
  - tdestroy
  - twalk
- vFpV:
  - warn
  - warnx
- iFip:
  - fstat
  - fstat64
- iFup:
  - setrlimit
- iFpi:
  - __sigsetjmp
  - backtrace
  - sigsetjmp
- iFpL:
  - munmap
- iFpp:
  - __vprintf_chk
  - dl_iterate_phdr
  - execv
  - execvp
  - lstat
  - lstat64
  - sigaltstack
  - stat
  - stat64
  - swapcontext
- iFpV:
  - __isoc99_scanf
  - execl
  - execle
  - execlp
  - printf
  - wprintf
- iFpA:
  - __isoc99_vscanf
  - vprintf
  - vscanf
  - vwprintf
- iFSp:
  - _IO_file_stat
- pFip:
  - __sysv_signal
  - bsd_signal
  - signal
  - sigset
  - sysv_signal
- pFpi:
  - backtrace_symbols
- pFpp:
  - __realpath_chk
  - fopen
  - fopen64
  - realpath
- vFipV:
  - err
  - errx
  - syslog
- vFipA:
  - vsyslog
- vFpii:
  - backtrace_symbols_fd
- vFpup:
  - _ITM_addUserCommitAction
- iFiip:
  - __fxstat
  - __fxstat64
- iFiiN:
  - __fcntl
  - fcntl
  - fcntl64
- iFipp:
  - __lxstat
  - __lxstat64
  - __sigaction
  - __xstat
  - __xstat64
  - getopt
  - register_printf_specifier
  - sigaction
- iFipV:
  - __printf_chk
  - dprintf
- iFipA:
  - vdprintf
- iFpLi:
  - mprotect
- iFppi:
  - ftw
  - ftw64
- iFppp:
  - __cxa_atexit
  - __cxa_thread_atexit_impl
  - __vfprintf_chk
  - __vsscanf
  - execve
- iFppV:
  - __asprintf
  - __isoc23_fscanf
  - __isoc23_sscanf
  - __isoc99_fscanf
  - __isoc99_sscanf
  - __isoc99_swscanf
  - asprintf
  - fprintf
  - fscanf
  - fwprintf
  - sprintf
  - sscanf
  - swscanf
- iFppA:
  - __isoc99_vfscanf
  - __isoc99_vsscanf
  - __isoc99_vswscanf
  - obstack_vprintf
  - vasprintf
  - vfprintf
  - vfscanf
  - vfwprintf
  - vsprintf
  - vsscanf
  - vswscanf
- iFpOu:
  - __open
  - open
  - open64
- lFipV:
  - __wprintf_chk
- lFppL:
  - readlink
- LFppL:
  - strlcat
  - strlcpy
- pFpip:
  - fts64_open
  - fts_open
- pFppp:
  - tdelete
  - tfind
  - tsearch
- pFppV:
  - fopencookie
- vFiipV:
  - __syslog_chk
- vFiipA:
  - __vsyslog_chk
- vFpLLp:
  - qsort
- vFpppp:
  - __libc_init
- iFiiip:
  - epoll_ctl
- iFiiiN:
  - semctl
- iFiipV:
  - __dprintf_chk
- iFiipA:
  - __vdprintf_chk
- iFipii:
  - epoll_wait
- iFipup:
  - __xmknod
- iFippi:
  - fstatat
  - fstatat64
- iFippL:
  - readlinkat
- iFpipp:
  - __vasprintf_chk
  - glob
  - glob64
- iFpipV:
  - __asprintf_chk
  - __fprintf_chk
  - __fwprintf_chk
- iFpipA:
  - __vfwprintf_chk
- iFpLpV:
  - __snprintf
  - snprintf
  - swprintf
- iFpLpA:
  - __vsnprintf
  - vsnprintf
  - vswprintf
- iFppii:
  - nftw64
- iFppiV:
  - makecontext
- iFpppp:
  - __register_atfork
  - __vsprintf_chk
  - scandir
  - scandir64
- lFuipp:
  - ptrace
- vFpLLpp:
  - qsort_r
- iFiipup:
  - __xmknodat
- iFiippi:
  - __fxstatat
  - __fxstatat64
- iFiLLLL:
  - prctl
- iFipiip:
  - epoll_pwait
- iFipppp:
  - getopt_long
  - getopt_long_only
  - scandirat
- iFpilpV:
  - __sprintf_chk
- iFpuppp:
  - __vswprintf_chk
- iFpLLpp:
  - _obstack_begin
- pFpLLiN:
  - mremap
- pFppLLp:
  - bsearch
- pFpppLp:
  - lfind
  - lsearch
- iFpLiLpp:
  - __vsnprintf_chk
- iFpLiLpV:
  - __snprintf_chk
  - __swprintf_chk
- iFpppppp:
  - posix_spawn
  - posix_spawnp
- pFpLiiil:
  - mmap
  - mmap64
- iFpippppp:
  - __libc_start_main
- iFppipppp:
  - clone
wrappedlibcmusl:
wrappedlibdl:
- iFp:
  - dlclose
- pFv:
  - dlerror
- iFpp:
  - _dl_find_object
  - dladdr
- pFpi:
  - dlopen
- pFpp:
  - dlsym
- iFpip:
  - dlinfo
- pFppi:
  - dlmopen
- pFppp:
  - dlvsym
- iFpppi:
  - dladdr1
wrappedlibm:
- iFv:
  - fegetround
- iFi:
  - fesetround
- iFf:
  - lrintf
- iFd:
  - lrint
- IFf:
  - llrintf
- IFd:
  - llrint
- IFD:
  - llrintl
- IFK:
  - llrintl
- fFf:
  - __acosf_finite
  - __acoshf_finite
  - __asinf_finite
  - __coshf_finite
  - __exp2f_finite
  - __expf_finite
  - __log10f_finite
  - __log2f_finite
  - __logf_finite
  - __sinhf_finite
  - __sqrtf_finite
  - nearbyintf
  - pow10f
  - rintf
- dFd:
  - __acos_finite
  - __acosh_finite
  - __asin_finite
  - __cosh_finite
  - __exp2_finite
  - __exp_finite
  - __log10_finite
  - __log2_finite
  - __log_finite
  - __sinh_finite
  - __sqrt_finite
  - nearbyint
  - pow10
  - rint
- DFD:
  - pow10l
- KFK:
  - pow10l
- fFff:
  - __atan2f_finite
  - __fmodf_finite
  - __hypotf_finite
  - __powf_finite
- dFdd:
  - __atan2_finite
  - __fmod_finite
  - __hypot_finite
  - __pow_finite
wrappedlibpthread:
- vFp:
  - __pthread_register_cancel
  - __pthread_unregister_cancel
  - __pthread_unwind_next
- iFL:
  - pthread_key_delete
- iFp:
  - __pthread_mutexattr_destroy
  - __pthread_mutexattr_init
  - pthread_attr_destroy
  - pthread_attr_init
  - pthread_barrierattr_destroy
  - pthread_barrierattr_init
  - pthread_cond_broadcast
  - pthread_cond_destroy
  - pthread_cond_signal
  - pthread_condattr_destroy
  - pthread_condattr_init
  - pthread_getattr_default_np
  - pthread_mutexattr_destroy
  - pthread_mutexattr_init
  - pthread_setattr_default_np
- vFpi:
  - _pthread_cleanup_pop
  - _pthread_cleanup_pop_restore
- iFLp:
  - pthread_getattr_np
- iFpi:
  - __pthread_mutexattr_settype
  - pthread_attr_setdetachstate
  - pthread_attr_setinheritsched
  - pthread_attr_setschedpolicy
  - pthread_attr_setscope
  - pthread_barrierattr_setpshared
  - pthread_condattr_setclock
  - pthread_condattr_setpshared
  - pthread_kill
  - pthread_kill@GLIBC_2.2.5
  - pthread_mutexattr_setkind_np
  - pthread_mutexattr_setprotocol
  - pthread_mutexattr_setpshared
  - pthread_mutexattr_setrobust
  - pthread_mutexattr_settype
- iFpL:
  - pthread_attr_setguardsize
  - pthread_attr_setstacksize
- iFpp:
  - __pthread_key_create
  - __pthread_mutex_init
  - __pthread_once
  - pthread_attr_getdetachstate
  - pthread_attr_getguardsize
  - pthread_attr_getinheritsched
  - pthread_attr_getschedparam
  - pthread_attr_getschedpolicy
  - pthread_attr_getscope
  - pthread_attr_getstackaddr
  - pthread_attr_getstacksize
  - pthread_attr_setschedparam
  - pthread_attr_setstackaddr
  - pthread_barrierattr_getpshared
  - pthread_cond_init
  - pthread_cond_wait
  - pthread_condattr_getclock
  - pthread_condattr_getpshared
  - pthread_key_create
  - pthread_mutex_init
  - pthread_mutexattr_getkind_np
  - pthread_mutexattr_getprotocol
  - pthread_mutexattr_getrobust
  - pthread_mutexattr_gettype
  - pthread_once
- vFppp:
  - _pthread_cleanup_push
  - _pthread_cleanup_push_defer
- iFpLp:
  - pthread_attr_setaffinity_np
  - pthread_getaffinity_np
  - pthread_setaffinity_np
- iFppu:
  - pthread_barrier_init
- iFppL:
  - pthread_attr_setstack
- iFppp:
  - __pthread_atfork
  - pthread_atfork
  - pthread_attr_getstack
  - pthread_cond_timedwait
- iFppip:
  - pthread_cond_clockwait
- iFpppp:
  - pthread_create
wrappedlibresolv:
wrappedlibrt:
- iFp:
  - aio_read
  - aio_read64
  - aio_write
  - aio_write64
- iFip:
  - aio_cancel
- iFupp:
  - timer_create
- iFipip:
  - lio_listio
wrappedutil:
- iFpppp:
  - forkpty
